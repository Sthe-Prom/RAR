@inject SignInManager<User> signInManager;
@inject UserManager<User> userManager;

@model BaseViewModel;

@{
    var userId = userManager.GetUserId(User);
    User user_id = await userManager.FindByIdAsync(userId);
}

<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	
	<link rel="preconnect" href="https://fonts.gstatic.com">
	<link rel="shortcut icon" href="img/icons/icon-48x48.png" />

	<link rel="canonical" href="https://demo-basic.adminkit.io/" />

    <title>@ViewData["Title"] - R - A - R</title>

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">

    <!-- Local BS -->
    <!-- <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" asp-append-version="true" /> -->
    <!-- BS -->
    <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"> -->

    <!-- Sweet Alert -->
    <link rel="stylesheet" type="text/css" href="https://common.olemiss.edu/_js/sweet-alert/sweet-alert.css">

</head>
<body>
    <div class="wrapper">
     
        <nav id="sidebar" class="sidebar js-sidebar">
            <div class="sidebar-content js-simplebar">
                <a class="sidebar-brand" href="~/Home/Home">
                    <span class="align-middle">R-A-R</span>
                </a>

                <ul class="sidebar-nav">
                    @if((signInManager.IsSignedIn(User)) )                                                
                    {
                        <li class="sidebar-header">
                            Reports & Summaries
                        </li>

                        <li class="sidebar-item active">
                            <a class="sidebar-link" href="~/Home/Home">
                                <i class="align-middle" data-feather="sliders"></i> <span class="align-middle">Dashboard</span>
                            </a>
                        </li>
                    } 
                    else
                    {
                        <li class="sidebar-header">
                            Login / Register
                        </li>                       
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="~/UserAccount/Login">
                                <i class="align-middle" data-feather="log-in"></i> <span class="align-middle">Sign In</span>
                            </a>
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" href="~/UserAdmin/Create">
                                <i class="align-middle" data-feather="user-plus"></i> <span class="align-middle">Sign Up</span>
                            </a>
                        </li>
                    }

                    @if((signInManager.IsSignedIn(User)) )                                                
                    {
                   
                        <li class="sidebar-header">
                            Accidents Management
                        </li>

                        <li class="sidebar-item">
                            <a class="sidebar-link" href="~/AccidentReport/LatestAccidents">
                                <i class="align-middle" data-feather="plus-square"></i> <span class="align-middle">Accident Report</span>
                            </a>
                        </li>
                       
                    }

                    @*<li class="sidebar-header">
                        About & More
                    </li>

                    <li class="sidebar-item">
                        <a class="sidebar-link" href="~/Home/FAQ">
                            <i class="align-middle" data-feather="help-circle"></i> <span class="align-middle">F-A-Q</span>
                        </a>
                    </li>

                    <li class="sidebar-item">
                        <a class="sidebar-link" href="~/Home/Contact">
                            <i class="align-middle" data-feather="mail"></i> <span class="align-middle">Contacts</span>
                        </a>
                    </li>

                     <li class="sidebar-item">
                        <a class="sidebar-link" href="~/Home/About">
                            <i class="align-middle" data-feather="message-circle"></i> <span class="align-middle">About</span>
                        </a>
                    </li>
                    *@
                    
                    @if((signInManager.IsSignedIn(User)) )                                                
                    {
                        <li class="sidebar-header">
                            Login / Register
                        </li>
                        <li class="sidebar-item">
                            <a class="sidebar-link" asp-action="Logout" asp-controller="UserAccount">
                                <i class="align-middle" data-feather="log-out"></i> <span class="align-middle">Logout</span>
                            </a>
                        </li>
                      
                                if(await userManager.IsInRoleAsync(user_id,"Officer"))
                                {
                                    <li class="sidebar-item ">
                                        <a class="sidebar-link" href="~/Account/myprofile">
                                            <i class="align-middle" data-feather="user"></i> <span class="align-middle">Account</span>
                                        </a>
                                    </li>
                                }

                                @*-- User / Role Manager --*@
                               
                                @if(await userManager.IsInRoleAsync(user_id,"Admins"))
                                {

                                    <li class="sidebar-header">Role Management</li>

                                    <li class="sidebar-item active">
                                        <a class="sidebar-link" href="~/RoleAdmin/Index">
                                            <i class="align-middle" data-feather="settings"></i>
                                            <span>Manage User Roles</span>
                                        </a>
                                    </li>
                                    <li class="sidebar-item active">
                                        <a class="sidebar-link" href="~/UserAdmin/Index">
                                            <i class="align-middle" data-feather="user-plus"></i>
                                            <span>Manage Users</span>
                                        </a>                        
                                    </li>
                                    @* End Register Page Nav *@
                                
                                    <hr />
                                    @*
                                    <li class="sidebar-header">Admin Settings</li>

                                    <li class="sidebar-item">
                                        <a class="sidebar-link" href="~/Settings/Settings">
                                            <i class="align-middle" data-feather="user-check"></i>
                                            <span>Manage Admin Settings</span>
                                        </a>
                                        
                                    </li>                     
                                    *@
                                    @* End Register Page Nav *@
                                
                                   
                                }
                                
                    }
                </ul>
                
            </div>
        </nav>
      
        <div class="main">
            
                <nav class="navbar navbar-expand navbar-light navbar-bg">
                    <a class="sidebar-toggle js-sidebar-toggle">
                        <i class="hamburger align-self-center"></i>
                    </a>

                    <div class="navbar-collapse collapse">
                        <ul class="navbar-nav navbar-align">
                            @if((signInManager.IsSignedIn(User)) )                                                
                            {
                                @* Notifications*@
                                <li class="nav-item dropdown">
                                    <a class="nav-icon dropdown-toggle" href="#" id="alertsDropdown" data-bs-toggle="dropdown">
                                        <div class="position-relative">
                                            <i class="align-middle" data-feather="bell"></i>
                                            <span class="indicator">4</span>
                                        </div>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end py-0" aria-labelledby="alertsDropdown">
                                        <div class="dropdown-menu-header">
                                            4 New Reports
                                        </div>
                                        <div class="list-group">
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                    <div class="col-2">
                                                        <i class="text-danger" data-feather="alert-circle"></i>
                                                    </div>
                                                    <div class="col-10">
                                                        <div class="text-dark">Urgent</div>
                                                        <div class="text-muted small mt-1">Accident Report needs attention</div>
                                                        <div class="text-muted small mt-1">30m ago</div>
                                                    </div>
                                                </div>
                                            </a>
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                    <div class="col-2">
                                                        <i class="text-warning" data-feather="bell"></i>
                                                    </div>
                                                    <div class="col-10">
                                                        <div class="text-dark">Accident report not attended</div>
                                                        <div class="text-muted small mt-1">Report by Park road not attended</div>
                                                        <div class="text-muted small mt-1">2h ago</div>
                                                    </div>
                                                </div>
                                            </a>
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                    <div class="col-2">
                                                        <i class="text-primary" data-feather="home"></i>
                                                    </div>
                                                    <div class="col-10">
                                                        <div class="text-dark">New report logged</div>
                                                        <div class="text-muted small mt-1">5h ago</div>
                                                    </div>
                                                </div>
                                            </a>
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                    <div class="col-2">
                                                        <i class="text-success" data-feather="user-plus"></i>
                                                    </div>
                                                    <div class="col-10">
                                                        <div class="text-dark">Report attended to</div>
                                                        <div class="text-muted small mt-1">User SB45</div>
                                                        <div class="text-muted small mt-1">14h ago</div>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        <div class="dropdown-menu-footer">
                                            <a href="#" class="text-muted">Show all notifications</a>
                                        </div>
                                    </div>
                                </li>
                                <li class="nav-item dropdown">
                                    <a class="nav-icon dropdown-toggle" href="#" id="messagesDropdown" data-bs-toggle="dropdown">
                                        <div class="position-relative">
                                            <i class="align-middle" data-feather="message-square"></i>
                                        </div>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end py-0" aria-labelledby="messagesDropdown">
                                        <div class="dropdown-menu-header">
                                            <div class="position-relative">
                                                Incidents Logged
                                            </div>
                                        </div>
                                        <div class="list-group">
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                   
                                                    <div class="col-12 ps-2">
                                                        <div class="text-dark">User SB38</div>
                                                        <div class="text-muted small mt-1">User Marked Incident as Completed</div>
                                                        <div class="text-muted small mt-1">15m ago</div>
                                                    </div>
                                                </div>
                                            </a>   
                                            <a href="#" class="list-group-item">
                                                <div class="row g-0 align-items-center">
                                                    
                                                    <div class="col-12 ps-2">
                                                        <div class="text-dark">User SB38</div>
                                                        <div class="text-muted small mt-1">Urgent request to Driver Information</div>
                                                        <div class="text-muted small mt-1">15m ago</div>
                                                    </div>
                                                </div>
                                            </a>                                   
                                        
                                        </div>
                                        <div class="dropdown-menu-footer">
                                            <a href="#" class="text-muted">Show all messages</a>
                                        </div>
                                    </div>
                                </li>
                                @*Profile *@
                                <li class="nav-item dropdown">
                                   
                                    
                                        @{
                                            if(Model.Accounts != null && Model.Accounts.Count() != 0)
                                            {
                                                @foreach (var item in Model.Accounts.Where(c => c.Id == userId))
                                                {
                                                <a class="nav-link dropdown-toggle d-none d-sm-inline-block" href="#" data-bs-toggle="dropdown">
                                                    <img src="~/users/profiles/@item.ProfileImg"  class="avatar img-fluid rounded me-1" alt="UserImage" />                                                   
                                                    <span class="text-dark">@User.Identity.Name</span>                                                
                                                </a>
                                                }
                                            
                                            
                                                var v_id = Model.Accounts.Where(c => c.Id == userId).ToList();
                            
                                                var s_id = "";
                                                foreach(var i in v_id)
                                                {
                                                    s_id = i.Id;
                                                }

                                                if (String.IsNullOrEmpty(s_id))
                                                {
                                                    
                                                    <a class="nav-link dropdown-toggle d-none d-sm-inline-block" href="#" data-bs-toggle="dropdown">
                                                            
                                                            <i class="align-middle me-1" data-feather="user"></i> 
                                                            <span class="text-dark">@User.Identity.Name</span>
                                                        
                                                    </a>
                                                    
                                                }
                                            }
                                            else
                                            {
                                                <a class="nav-icon dropdown-toggle d-inline-block" href="#" data-bs-toggle="dropdown">
                                                    <i class="align-middle" data-feather="settings"></i>
                                                </a>
                                            }
                                        }

                                        
                                    <div class="dropdown-menu dropdown-menu-end">
                                        <a class="dropdown-item" href="~/Account/Profile">
                                            <i class="align-middle me-1" data-feather="unlock"></i> 
                                            My Profile
                                        </a>                               
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item" href="~/Account/Index">
                                            <i class="align-middle me-1" data-feather="settings"></i>
                                            Account Settings
                                        </a>                                
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item" href="~/UserAccount/Logout">
                                            <i class="align-middle me-1" data-feather="log-out"></i>
                                            Log out
                                        </a>
                                    </div>
                                </li>
                              
                            }

                             
                        </ul>
                    </div>
                </nav> 
            

            <main class="content">
                @RenderBody()            
            </main>

            <footer class="footer">
                <div class="container-fluid">
                    <div class="row text-muted">
                        <div class="col-6 text-start">
                            <p class="mb-0">
                                <a class="text-muted" href="#" ><strong>R - A - R</strong></a> &copy;
                            </p>
                        </div>
                        <div class="col-6 text-end">
                            <ul class="list-inline">
                                <li class="list-inline-item">
                                    <a class="text-muted" href="#" >Support</a>
                                </li>
                                <li class="list-inline-item">
                                    <a class="text-muted" href="#">Help Center</a>
                                </li>
                                <li class="list-inline-item">
                                    <a class="text-muted" href="#" >Privacy</a>
                                </li>
                                <li class="list-inline-item">
                                    <a class="text-muted" href="#" >Terms</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>

    
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!-- <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>  -->
    <!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script> -->
    <script src="~/js/app.js" asp-append-version="true"></script> 
    <script src="~/js/main.js" asp-append-version="true"></script>    
    
    <script src="https://common.olemiss.edu/_js/sweet-alert/sweet-alert.min.js"></script>
    
    @await RenderSectionAsync("Scripts", required: false)

    <script>
		document.addEventListener("DOMContentLoaded", function() {
			var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
			var gradient = ctx.createLinearGradient(0, 0, 0, 225);
			gradient.addColorStop(0, "rgba(215, 227, 244, 1)");
			gradient.addColorStop(1, "rgba(215, 227, 244, 0)");
			// Line chart
			new Chart(document.getElementById("chartjs-dashboard-line"), {
				type: "line",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "Sales ($)",
						fill: true,
						backgroundColor: gradient,
						borderColor: window.theme.primary,
						data: [
							2115,
							1562,
							1584,
							1892,
							1587,
							1923,
							2566,
							2448,
							2805,
							3438,
							2917,
							3327
						]
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 1000
							},
							display: true,
							borderDash: [3, 3],
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}]
					}
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			// Pie chart
			new Chart(document.getElementById("chartjs-dashboard-pie"), {
				type: "pie",
				data: {
					labels: ["Chrome", "Firefox", "IE"],
					datasets: [{
						data: [4306, 3801, 1689],
						backgroundColor: [
							window.theme.primary,
							window.theme.warning,
							window.theme.danger
						],
						borderWidth: 5
					}]
				},
				options: {
					responsive: !window.MSInputMethodContext,
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					cutoutPercentage: 75
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			// Bar chart
			new Chart(document.getElementById("chartjs-dashboard-bar"), {
				type: "bar",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "This year",
						backgroundColor: window.theme.primary,
						borderColor: window.theme.primary,
						hoverBackgroundColor: window.theme.primary,
						hoverBorderColor: window.theme.primary,
						data: [54, 67, 41, 55, 62, 45, 55, 73, 60, 76, 48, 79],
						barPercentage: .75,
						categoryPercentage: .5
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					scales: {
						yAxes: [{
							gridLines: {
								display: false
							},
							stacked: false,
							ticks: {
								stepSize: 20
							}
						}],
						xAxes: [{
							stacked: false,
							gridLines: {
								color: "transparent"
							}
						}]
					}
				}
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			var markers = [{
					coords: [31.230391, 121.473701],
					name: "Shanghai"
				},
				{
					coords: [28.704060, 77.102493],
					name: "Delhi"
				},
				{
					coords: [6.524379, 3.379206],
					name: "Lagos"
				},
				{
					coords: [35.689487, 139.691711],
					name: "Tokyo"
				},
				{
					coords: [23.129110, 113.264381],
					name: "Guangzhou"
				},
				{
					coords: [40.7127837, -74.0059413],
					name: "New York"
				},
				{
					coords: [34.052235, -118.243683],
					name: "Los Angeles"
				},
				{
					coords: [41.878113, -87.629799],
					name: "Chicago"
				},
				{
					coords: [51.507351, -0.127758],
					name: "London"
				},
				{
					coords: [40.416775, -3.703790],
					name: "Madrid "
				}
			];
			var map = new jsVectorMap({
				map: "world",
				selector: "#world_map",
				zoomButtons: true,
				markers: markers,
				markerStyle: {
					initial: {
						r: 9,
						strokeWidth: 7,
						stokeOpacity: .4,
						fill: window.theme.primary
					},
					hover: {
						fill: window.theme.primary,
						stroke: window.theme.primary
					}
				},
				zoomOnScroll: false
			});
			window.addEventListener("resize", () => {
				map.updateSize();
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function() {
			var date = new Date(Date.now() - 5 * 24 * 60 * 60 * 1000);
			var defaultDate = date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
			document.getElementById("datetimepicker-dashboard").flatpickr({
				inline: true,
				prevArrow: "<span title=\"Previous month\">&laquo;</span>",
				nextArrow: "<span title=\"Next month\">&raquo;</span>",
				defaultDate: defaultDate
			});
		});
	</script>
    <script>
		document.addEventListener("DOMContentLoaded", function() {
			// Line chart
			new Chart(document.getElementById("chartjs-line"), {
				type: "line",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "Accidents",
						fill: true,
						backgroundColor: "transparent",
						borderColor: window.theme.primary,
						data: [2115, 1562, 1584, 1892, 1487, 2223, 2966, 2448, 2905, 3838, 2917, 3327]
					}, {
						label: "Fatalities",
						fill: true,
						backgroundColor: "transparent",
						borderColor: "#adb5bd",
						borderDash: [4, 4],
						data: [958, 724, 629, 883, 915, 1214, 1476, 1212, 1554, 2128, 1466, 1827]
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.05)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 500
							},
							display: true,
							borderDash: [5, 5],
							gridLines: {
								color: "rgba(0,0,0,0)",
								fontColor: "#fff"
							}
						}]
					}
				}
			});
		});
	</script>
     
</body>
</html>
